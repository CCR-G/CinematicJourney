name: CI

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:

  test-desktop:
    name: 'Test: Desktop'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Gradle
        uses: ./.github/actions/gradle-setup
      - name: Setup local.properties
        uses: ./.github/actions/local-properties-setup
        with:
          tmdb-api-key: ${{ secrets.TMDB_API_KEY }}
      - name: Test
        shell: bash
        run: ./gradlew desktopTest --no-daemon
      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-desktop
          path: build/reports/tests/desktopTest/*
          compression-level: 9

  build-android:
    name: 'Build: Android'
    needs: test-desktop
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Gradle
        uses: ./.github/actions/gradle-setup
      - name: Setup local.properties
        uses: ./.github/actions/local-properties-setup
        with:
          tmdb-api-key: ${{ secrets.TMDB_API_KEY }}
      - name: Build App
        shell: bash
        run: ./gradlew assembleRelease bundleRelease --no-daemon
      - name: Upload APK (.apk)
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/outputs/apk/release/CinematicJourney-release.apk
          compression-level: 0
      - name: Upload Bundle (.aab)
        uses: actions/upload-artifact@v4
        with:
          name: android-bundle
          path: build/outputs/bundle/release/CinematicJourney-release.aab
          compression-level: 0

  build-desktop:
    strategy:
      matrix:
        os: [ linux, macos, windows ]
        include:
          - os: linux
            name: Linux
            runs-on: ubuntu-latest
          - os: macos
            name: MacOS
            runs-on: macos-14
          - os: windows
            name: Windows
            runs-on: windows-latest
    name: 'Build: ${{ matrix.name }}'
    needs: test-desktop
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Gradle
        uses: ./.github/actions/gradle-setup
      - name: Setup local.properties
        uses: ./.github/actions/local-properties-setup
        with:
          tmdb-api-key: ${{ secrets.TMDB_API_KEY }}
      - name: Build App
        shell: bash
        run: ./gradlew packageReleaseUberJarForCurrentOS --no-daemon
      - name: Upload Jar
        uses: actions/upload-artifact@v4
        with:
          name: desktop-${{ matrix.os }}
          path: build/compose/jars/*.jar
          compression-level: 0

  build-ios:
    name: 'Build: iOS'
    needs: test-desktop
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Gitlab Access
        uses: ./.github/actions/gitlab-access-setup
        with:
          gitlab-access-token: ${{ secrets.GITLAB_PERSONAL_ACCESS_TOKEN }}
      - name: Setup Gradle
        uses: ./.github/actions/gradle-setup
      - name: Setup local.properties
        uses: ./.github/actions/local-properties-setup
        with:
          tmdb-api-key: ${{ secrets.TMDB_API_KEY }}
      - name: Setup XCode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: 15.2
      - name: Apply Gradle Build version to XCode project
        shell: bash
        run: ./gradlew setXcodeVersion --no-daemon
      - name: Build & Publish App
        shell: bash
        env:
          APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY }}
          APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        run: |
          cd xcode
          bundle install
          bundle exec fastlane beta
